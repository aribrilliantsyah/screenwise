
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String
  name         String?
  address      String?
  university   String?
  gender       String?
  whatsapp     String?
  phone        String?
  photo        String?
  isAdmin      Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  attempts QuizAttempt[]
}

model Quiz {
  id               Int      @id @default(autoincrement())
  slug             String   @unique
  title            String
  description      String
  passingScore     Int
  timeLimitSeconds Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  questions Question[]
  attempts  QuizAttempt[]
}

model Question {
  id            Int    @id @default(autoincrement())
  quizId        Int
  questionText  String
  options       String // JSON stringified array
  correctAnswer String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  quiz Quiz @relation(fields: [quizId], references: [id], onDelete: Cascade)

  @@unique([quizId, questionText])
}

model QuizAttempt {
  id          Int      @id @default(autoincrement())
  userId      Int
  quizId      Int
  score       Float
  passed      Boolean
  answers     String // JSON stringified object
  submittedAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  quiz Quiz @relation(fields: [quizId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([quizId])
}
