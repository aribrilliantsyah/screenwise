// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}


model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  passwordHash  String
  name          String?
  address       String?
  university    String?
  gender        String?
  whatsapp      String?
  phone         String?
  photo         String? // Storing as Base64 Data URI
  isAdmin       Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  quizAttempts  QuizAttempt[]
}

model Quiz {
  id                Int      @id @default(autoincrement())
  slug              String   @unique
  title             String
  description       String
  passingScore      Int
  timeLimitSeconds  Int
  questions         Question[]
  attempts          QuizAttempt[]
}

model Question {
  id            Int      @id @default(autoincrement())
  quizId        Int
  quiz          Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  questionText  String
  options       String // Storing as JSON string
  correctAnswer String

  @@unique([quizId, questionText])
}

model QuizAttempt {
  id          Int      @id @default(autoincrement())
  userId      Int
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  quizId      Int
  quiz        Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  score       Float
  passed      Boolean
  answers     String // Storing answers as JSON string
  submittedAt DateTime @default(now())

  @@index([userId])
  @@index([quizId])
}
